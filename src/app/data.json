{
    "Sheet1": [
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "AutoApprovalExceptions",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Auto-Approval Exceptions",
            "ENABLED_FLAG": "Y",
            "START_DATE": "5/7/20 13:50",
            "END_DATE": "[NULL]",
            "COL1": "120",
            "COL2": "100003",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor reports on Exceptions in the Auto-Approval Queue.\r\n\rIt will resubmit those exceptions that we know will resolve when re-run.\r\n\rAction must be taken for all other records where procedure does not return success, or for records that do not succeed after continued re-submissions.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = AutoApprovalExceptions ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "5/28/20 11:31",
            "COL20": "6/8/20 5:27",
            "CLOB1": "SELECT sequence, request_id, ucid, status_flag, retry_count, message , party_rowid_obj, addr_rowid_obj FROM emcparty.emc_auto_approve_q WHERE status_flag = 'E' AND retry_count >= (    SELECT TO_NUMBER(col2) FROM emcparty.c_emc_lookup_ctrl WHERE lookup_type = 'AUTO_APPROVAL_CONTROL' AND lookup_code = 'AUTO_APPROVAL_CONTROL'    AND enabled_flag = 'Y' AND SYSDATE BETWEEN start_date AND NVL(end_date, SYSDATE + 1) ) ORDER BY sequence ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_AutoApprovalExceptions(?,?,?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "BatchUnmerge_HighBacklog",
            "MEANING": "[NULL]",
            "DESCRIPTION": "*** FYI *** Large Backlog for Batch Unmerge Queue",
            "ENABLED_FLAG": "Y",
            "START_DATE": "6/4/20 15:18",
            "END_DATE": "[NULL]",
            "COL1": "1440",
            "COL2": "100065",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "The Batch Unmerge Queue (EMC_BATCH_UNMERGE_IMAP) has backlog exceeding the threshold.\r\n\rThe threshold is in COL8.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = BatchUnmerge_HighBacklog ",
            "COL8": "10000",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 15:41",
            "COL20": "6/7/20 15:41",
            "CLOB1": "select backlog, to_char(earliest_dt, 'DD-MON-YYYY hh24:mi:ss') as earliest_dt, to_char(latest_dt, 'DD-MON-YYYY hh24:mi:ss') as latest_dt from (    select count(*) as backlog, min(create_date) earliest_dt, max(create_date) latest_dt  from emcparty.emc_batch_unmerge_imap    where status is null ) where backlog > ? ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "BumpPriorityDefQ_RecalcUlt",
            "MEANING": "[NULL]",
            "DESCRIPTION": "RECALC_ULT Deferred Queue Priority Updates",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/3/20 16:58",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100005",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves Deferred Queue RECALC_ULT records that need to have priority bumped to process earlier.\r\n\rThe Fix SP will bump these to a higher priority based on the creator.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = BumpPriorityDefQ_RecalcUlt ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 5:59",
            "COL20": "6/8/20 6:40",
            "CLOB1": "SELECT sequence, created_by, to_char(create_date, 'yyyy-mm-dd hh24:mi:ss') as create_dt, party_rowid, priority current_priority, udf_char1 hm_type_cd, udf_char2 calc_descendants FROM ibstg.emc_ucid_deferred_q WHERE op_type = 'RECALC_ULT' AND status_flag IS NULL AND (created_by LIKE 'IDD%' or created_by in ('DS_UNMERGE')) AND priority >= 100 /* dont pick up records already bumped */",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_BumpPriorityDefQ_RecalcUlt(?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CMDMCreateRequests",
            "MEANING": "[NULL]",
            "DESCRIPTION": "CMDM Customer Requests Under Review and Closed in last 24 hours",
            "ENABLED_FLAG": "Y",
            "START_DATE": "3/14/20 10:31",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "103000",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "Thomas_Polley@Dell.com,Danielle.Kilpelainen@dell.com,Abdul.Khadeer@dell.com,ken.swidrak@dell.com,sandy.douglas@dell.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of CMDM UCID Requests created in the last 24 hours and any requests created in the last 60 days that are still under review. \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 19:43",
            "COL20": "6/7/20 19:43",
            "CLOB1": "SELECT     DECODE (SUBSTR (NVL (ib.requestor_system, x.emc_source_system), 1, 6),              'SFDC', 'SFDC Core Lead',              'DELL', 'Dell Main Oppty',              'WEBAPP', 'I-Map Portal',              NVL (ib.requestor_system, x.emc_source_system)     ) AS requestor_system,     x.ucid,     ib.request_id,     DECODE(ib.status_flag, 'R', 'Rejected', 'U', 'Pending Approval',              'P', DECODE(INSTR(ib.request_id, ib.ucid),                          0, DECODE(ib.rowid_xref, NULL, 'Auto-Matched', 'Replacement UCID') /*'Matched'*/,                          NVL((select 'Auto-Approved' from emcparty.emc_auto_approve_q where request_id = ib.request_id and process_type = 'AUTO-APPROVE'), 'Approved')                          ),              'C', DECODE(INSTR(ib.request_id, ib.ucid),                          0, DECODE(ib.rowid_xref, NULL, 'Auto-Matched', 'Replacement UCID') /*'Matched'*/,                          NVL((select 'Auto-Approved' from emcparty.emc_auto_approve_q where request_id = ib.request_id and process_type = 'AUTO-APPROVE'), 'Approved')                          ),              ib.status_flag) as status,     DECODE(x.ucid, NULL, ib.customer_name, x.party_name) AS customer_name,     DECODE(x.ucid, NULL, ib.address1, a.addr_1) AS address1,     DECODE(x.ucid, NULL, ib.address2, a.addr_2) AS address2,     DECODE(x.ucid, NULL, ib.address3, a.addr_3) AS address3,     DECODE(x.ucid, NULL, ib.address4, a.addr_4) AS address4,     DECODE(x.ucid, NULL, ib.city, a.city) as city,     DECODE(x.ucid, NULL, ib.region, NVL(a.province, a.state)) as region,     DECODE(x.ucid, NULL, ib.postal_code, a.postal_cd) AS postal_code,     DECODE(x.ucid, NULL, ib.country_cd, a.country_cd) AS country,     TO_CHAR (ib.create_date, 'YYYY-MM-DD HH24:MI:SS') AS create_dt,     TO_CHAR (ib.last_update_date, 'YYYY-MM-DD HH24:MI:SS') AS last_update_dt,     ib.requestor_email,     ib.local_name,     ib.local_address1,     ib.local_address2,     ib.local_address3,     ib.local_address4,     ib.local_city,     ib.local_region,     ib.rejection_comments FROM emcparty.c_b_party_xref   x,      emcparty.c_b_addr_xref    a,      ibstg.IB_UCID_REQUEST_INTF ib WHERE     a.pkey_src_object(+) = x.PKEY_SRC_OBJECT      AND ib.ucid = x.ucid(+)      AND (ib.create_date > SYSDATE - (1 + (15 / 1440))           OR ib.last_update_date > SYSDATE - (1 + (15 / 1440)) /* since it only runs once per day, add an extra 15 min */           OR (ib.STATUS_FLAG = 'U' and ib.last_update_date > SYSDATE - 60)           )      AND x.party_status(+) LIKE 'A%'      AND ib.source_system = 'CMDM'      AND x.ucid(+) < '18' ORDER BY ib.create_date ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CheckCustomIndexes",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Custom Indexes Missing",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/3/20 14:43",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "101",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor has detected missing custom index(es).\r\n\rURGENT - please re-run the custom index script, and CHECK ALL HACKED VIEWS for customizations!\r\n\rNOTE:  Attachment does not contain any important information.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = CheckCustomIndexes ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "3/14/20 11:46",
            "COL20": "6/8/20 5:48",
            "CLOB1": "SELECT 1 as index_missing FROM DUAL WHERE 18 > (     SELECT COUNT(*) FROM (         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'UCID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns px_updby_sys WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'PARTY_NAME' AND column_position = 1            AND EXISTS (SELECT 1 FROM all_ind_columns WHERE index_name = px_updby_sys.index_name AND column_name = 'ROWID_SYSTEM' AND column_position = 2)         UNION         SELECT * FROM all_ind_columns px_name_sys WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'UPDATED_BY' AND column_position = 1            AND EXISTS (SELECT 1 FROM all_ind_columns WHERE index_name = px_name_sys.index_name AND column_name = 'ROWID_SYSTEM' AND column_position = 2)         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'REQUEST_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_XREF' AND column_name = 'PARTY_NBR'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_HXRF' AND column_name = 'REQUEST_ID'         UNION         SELECT * FROM all_ind_columns ph_req_dt WHERE table_name = 'C_B_PARTY_HXRF' AND column_name = 'REQUESTOR_NTID' AND column_position = 1            AND EXISTS (SELECT 1 FROM all_ind_columns WHERE index_name = ph_req_dt.index_name AND column_name = 'HIST_CREATE_DATE' AND column_position = 2)         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_HXRF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_ADDR_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_ADDR_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_IDENTIFIER_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_IDENTIFIER_XREF' AND column_name = 'LAST_UPDATE_DATE'         UNION         SELECT * FROM all_ind_columns ix_type_val WHERE table_name = 'C_B_IDENTIFIER_XREF' AND column_name = 'IDENTIFIER_TYPE' AND column_position = 1            AND EXISTS (SELECT 1 FROM all_ind_columns WHERE index_name = ix_type_val.index_name AND column_name = 'IDENTIFIER_VALUE' AND column_position = 2)         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_DISPLAY_NAME_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PARTY_ULTIMATES_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_PHONE_XREF' AND column_name = 'INTERACTION_ID'         UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_ELEC_ADDR_XREF' AND column_name = 'INTERACTION_ID'         /* commented out for now until index gets added (and change 18> to 19>          UNION         SELECT * FROM all_ind_columns WHERE table_name = 'C_B_TRANS_CUST_DATA_XREF' AND column_name = 'INTERACTION_ID'         */     ) ) ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaMissingTranslation_4AM",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customers Missing Translations",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "10",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCIDS without Translation.\r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 4:18",
            "COL20": "6/8/20 4:18",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.hub_state_ind = 1 and a.hub_state_ind = 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' /* we only want the new records, but there could be a delay before they are approved */ and x.create_date > sysdate - 30 and x.last_update_date > sysdate - 7 and not exists (     select 1 from emcparty.c_b_trans_cust_data_xref     where rowid_party = x.rowid_xref     and rowid_translation_source = 'SALES' ) order by x.create_date desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaMissingTranslation_730PM",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customers Missing Translations",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1437",
            "COL2": "10",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCIDS without Translation.\r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 19:38",
            "COL20": "6/7/20 19:38",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.hub_state_ind = 1 and a.hub_state_ind = 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' /* we only want the new records, but there could be a delay before they are approved */ and x.create_date > sysdate - 30 and x.last_update_date > sysdate - 7 and not exists (     select 1 from emcparty.c_b_trans_cust_data_xref     where rowid_party = x.rowid_xref     and rowid_translation_source = 'SALES' ) order by x.create_date desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaMissingTranslation_Midnight",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customers Missing Translations",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "10",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCIDS without Translation.\r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 23:58",
            "COL20": "6/7/20 23:58",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.hub_state_ind = 1 and a.hub_state_ind = 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' /* we only want the new records, but there could be a delay before they are approved */ and x.create_date > sysdate - 30 and x.last_update_date > sysdate - 7 and not exists (     select 1 from emcparty.c_b_trans_cust_data_xref     where rowid_party = x.rowid_xref     and rowid_translation_source = 'SALES' ) order by x.create_date desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaRequests_4AM",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customer Requests in last 24 hours",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "5",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCID Requests in the last 24 hours. \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank You. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 4:03",
            "COL20": "6/8/20 4:03",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email, local_name, local_address1, local_address2, local_address3, local_address4, local_city, local_region, decode(x.hub_state_ind, 1, 'Approved', 0, 'Pending Approval', x.hub_state_ind) approved_or_pending_review from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.create_date > sysdate - 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' order by x.ucid desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaRequests_730PM",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customer Requests in last 24 hours",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "5",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCID Requests in the last 24 hours. \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank You. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 19:32",
            "COL20": "6/7/20 19:32",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email, local_name, local_address1, local_address2, local_address3, local_address4, local_city, local_region, decode(x.hub_state_ind, 1, 'Approved', 0, 'Pending Approval', x.hub_state_ind) approved_or_pending_review from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.create_date > sysdate - 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' order by x.ucid desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ChinaRequests_Midnight",
            "MEANING": "[NULL]",
            "DESCRIPTION": "China Customer Requests in last 24 hours",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 17:43",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "5",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of China UCID Requests in the last 24 hours. \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank You. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 23:57",
            "COL20": "6/7/20 23:57",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email, local_name, local_address1, local_address2, local_address3, local_address4, local_city, local_region, decode(x.hub_state_ind, 1, 'Approved', 0, 'Pending Approval', x.hub_state_ind) approved_or_pending_review from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid (+) = x.ucid and x.create_date > sysdate - 1 and x.party_status like 'A%' and a.country_cd in ('CN','TW') and x.ucid < '18' order by x.ucid desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CorruptCreateRequests",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Corrupt Create Requests",
            "ENABLED_FLAG": "Y",
            "START_DATE": "5/8/20 16:18",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100003",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves create requests within the last two weeks that are missing tasks and are not in the auto-approval queue.\r\r\n\r\r\nIt will fix some requests (if the record stays on the report you will need to investigate).\r\r\n\r\r\nAction must be taken for all other records where procedure does not return success.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = CorruptCreateRequests ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/4/20 13:09",
            "COL20": "6/8/20 5:54",
            "CLOB1": "select ucid, rowid_xref, attribute34, emc_source_system, attribute10 as requestor_system, to_char(create_date, 'DD-MON-YYYY hh24:mi:ss') as create_dt , (select status_flag from ibstg.ib_ucid_request_intf where request_id = x.request_id) intf_status , (select count(*) from emcparty.c_b_party_addr_xref where hub_state_ind = 0 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') pend_pa_exist , (select count(*) from emcparty.c_b_addr_xref where hub_state_ind = 0 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') pend_addr_exist , (select count(*) from emcparty.c_b_party_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_pty_exist , (select count(*) from emcparty.c_b_party_addr_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_pa_exist , (select count(*) from emcparty.c_b_addr_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_addr_exist , (select listagg(sc.tak_action || ' - ' || sc.user_id, ';') within group (order by sc.user_id) from emcparty.c_status_capture sc, emcparty.c_repos_task_assignment_hist tah where tah.interaction_id = x.interaction_id and tah.title like '%'||x.ucid and tah.rowid_task = sc.rowid_task) task_action , request_type, to_char(request_date, 'DD-MON-YYYY hh24:mi:ss') request_dt, requestor_ntid, user_role, comments, task_comments , pkey_src_object, interaction_id, rowid_object, orig_rowid_object from emcparty.c_b_party_xref x where hub_state_ind = 0 and ucid is not null and ucid not like '18%' and request_type not in ('CHANGE') and create_date < sysdate - 1/24 and create_date > trunc(sysdate) - 14 and not exists (select 1 from emcparty.c_repos_task_assignment where interaction_id = x.interaction_id) and not exists (select 1 from emcparty.emc_auto_approve_q where interaction_id = x.interaction_id) order by x.create_date desc ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_CorruptCreateRequests(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CorruptTasks",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Corrupt iMAP Tasks",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100000",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of Corrupted Tasks (NULL interaction_id). These have been deleted.  Please check the return code from the fix SP to determine if a new task must be created!! \r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = CorruptTasks ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "4/8/20 14:06",
            "COL20": "6/8/20 5:48",
            "CLOB1": "select ROWID_TASK, INTERACTION_ID, SUBSTR(title, INSTR(title, '-', -1)+1) as ucid, (SELECT COUNT(*) FROM emcparty.c_repos_task_assignment WHERE title LIKE '%'||SUBSTR(ta.title, instr(ta.title, '-', -1)+1) AND interaction_id IS NOT NULL) as good_task_count, title, TASK_TYPE, to_char(CREATE_DATE,'MM/DD/YYYY HH24:MI') create_dt, to_char(LAST_UPDATE_DATE,'MM/DD/YYYY HH24:MI') last_update_dt from emcparty.c_repos_task_assignment ta where interaction_id is null order by create_date desc ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_CorruptTasks(?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CorruptUpdateRequests",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Corrupt Update Requests",
            "ENABLED_FLAG": "Y",
            "START_DATE": "4/28/20 15:53",
            "END_DATE": "[NULL]",
            "COL1": "240",
            "COL2": "100003",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves update requests that are missing tasks and are not in the auto-approval queue.\r\n\rIt will fix some requests (if the record stays on the report you will need to investigate).\r\n\rAction must be taken for all other records where procedure does not return success.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = CorruptUpdateRequests ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/6/20 11:59",
            "COL20": "6/8/20 4:38",
            "CLOB1": "select ucid, rowid_xref, attribute34, emc_source_system, to_char(create_date, 'DD-MON-YYYY hh24:mi:ss') as create_dt , (select count(*) from emcparty.c_b_party_addr_xref where hub_state_ind = 0 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') pend_pa_exist , (select count(*) from emcparty.c_b_addr_xref where hub_state_ind = 0 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') pend_addr_exist , (select count(*) from emcparty.c_b_party_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_pty_exist , (select count(*) from emcparty.c_b_party_addr_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_pa_exist , (select count(*) from emcparty.c_b_addr_xref where hub_state_ind = 1 and pkey_src_object = x.pkey_src_object and rowid_system = '11I') act_addr_exist , (select sc.tak_action || ' - ' || sc.user_id from emcparty.c_status_capture sc, emcparty.c_repos_task_assignment_hist tah where tah.interaction_id = x.interaction_id and tah.title like '%'||x.ucid and tah.rowid_task = sc.rowid_task) task_action , request_type, to_char(request_date, 'DD-MON-YYYY hh24:mi:ss') request_dt, requestor_ntid, user_role, comments, task_comments , pkey_src_object, interaction_id, rowid_object, orig_rowid_object from emcparty.c_b_party_xref x where hub_state_ind = 0 and ucid is not null and ucid not like '18%' and request_type not in ( 'CREATE', 'CLONE') and create_date < sysdate - 1/24 and create_date > to_date('01-JAN-2019', 'DD-MON-YYYY') and not exists (select 1 from emcparty.c_repos_task_assignment where interaction_id = x.interaction_id) and not exists (select 1 from emcparty.emc_auto_approve_q where interaction_id = x.interaction_id and NVL(status_flag, 'I') = 'I' ) order by x.create_date desc ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_CorruptUpdateRequests(?,?,?,?,?,?,?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "CreateReqMissingPartyID",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** iMAP Customer Creates missing 11i Party ID",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100003",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of all customer create approvals that are missing an 11i party ID.  \r\r\n\r\r\nIf the party exists in Oracle 11i, the party ID identifier needs to be created using the party ID from 11i (party number may also need to be populated on the party Xref).  \r\r\n\r\r\nONLY IF the party does not exist in Oracle 11i, then the UCID can be resent in the UCID queue.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = CreateReqMissingPartyID ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "5/20/20 8:01",
            "COL20": "6/8/20 5:49",
            "CLOB1": "select px.party_name,px.pkey_src_object, px.request_id, px.ucid, to_char(px.request_date,'MM/DD/YYYY HH24:MI') as request_date, round((sysdate - px.request_date) * 24 * 60) minutes_waiting from emcparty.c_b_party_xref px where hub_state_ind = 1 and ucid not like '18%' and NVL(TRIM(party_status), 'A') = 'A' /* ignore if status is I */ and not exists (  select 1 from emcparty.c_b_identifier_xref ix  where ix.pkey_src_object = px.pkey_src_object || '|11I_PARTY_ID' ) and exists (  select 1 from obstg.ucid_queue q1 where px.ucid = q1.ucid and q1.process_flag = 'P'  and q1.INTERFACE_NAME = 'CUSTOMER'  and creation_date < SYSDATE - 15/1440 /* Give it 15 minutes for 11i to return a party ID */ ) and px.create_date > sysdate - 30 ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "DefQ_HighBacklog",
            "MEANING": "[NULL]",
            "DESCRIPTION": "*** FYI *** Large Backlog for One or More Deferred Queue Op Types",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/27/20 16:32",
            "END_DATE": "[NULL]",
            "COL1": "180",
            "COL2": "100065",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "One or more Deferred Queue OP_TYPEs has backlog exceeding the threshold.\r\n\rThe threshold is in COL8.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = DefQ_HighBacklog ",
            "COL8": "5000",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/6/20 16:29",
            "COL20": "6/8/20 5:32",
            "CLOB1": "select op_type, min(create_date) min_create_date, max(create_date) max_create_date, count(*) rec_count from ibstg.emc_ucid_deferred_q q where status_flag is null and (ucid is null or exists (     /*ucid has party id identifier*/     select 1 from emcparty.c_b_party_xref px, emcparty.c_b_identifier_xref ix     where px.ucid = q.ucid and ix.pkey_src_object = px.pkey_src_object || '|11I_PARTY_ID' )) group by op_type having count(*) > 5000 ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "DefQ_ServiceAffinityID",
            "MEANING": "[NULL]",
            "DESCRIPTION": "*** FYI *** Large Volume of SERVICE_AFFINITY_ID Records Received",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/27/20 16:32",
            "END_DATE": "[NULL]",
            "COL1": "45",
            "COL2": "100060",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This notification is sent when the number of SERVICE_AFFINITY_RECORD inserts exceeds the threshold in the last hour.\r\n\rThe threshold is in COL8.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = DefQ_ServiceAffinityID ",
            "COL8": "1000",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/3/20 13:17",
            "COL20": "6/8/20 6:46",
            "CLOB1": "select * from ( select count(*) as service_affinity_id_ct from ibstg.emc_ucid_deferred_q where op_type = 'SERVICE_AFFINITY_ID' and create_date > SYSDATE - 1/12 ) where service_affinity_id_ct > ? ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "HackedViewCustomerCDM",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Customization Missing on Hacked View",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 16:02",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "101",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor has detected missing customization on PKG_IMAP_CUSTOMER_CDM.\r\r\n\r\r\nURGENT - please re-apply customization, and CHECK ALL OTHER HACKED VIEWS for customizations!  Also check that custom indexes are in place.\r\r\n\r\r\nNOTE:  Attachment does not contain any important information.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = HackedViewCustomerCDM ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "[NULL]",
            "COL20": "6/8/20 5:48",
            "CLOB1": "select 1 as customization_missing from dual where not exists (     select * from (         select dbms_metadata.get_ddl('VIEW', 'PKG_IMAP_CUSTOMER_CDM') text         from dual     ) q     where text like '%|SFDC_ACCT_NO%' ) ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "Health Check prod",
            "MEANING": "Health Check prod",
            "DESCRIPTION": "Health Check prod",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/11/20 1:17",
            "END_DATE": "[NULL]",
            "COL1": "1440",
            "COL2": "100",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "Health Check",
            "COL8": "30",
            "COL9": "0",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 7:33",
            "COL20": "6/7/20 7:33",
            "CLOB1": "SELECT 'GREEN' FROM DUAL",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "IntfTableAICCheck",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** INTF table AIC Problems",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100050",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the Auto Create requests that are stuck at N\" or \"I\" or the push flag is 0."
        },
        {
            "LOOKUP_TYPE": "If the requests are stuck at \"N\" or \"I\" - the AIC Upsert service is not working properly."
        },
        {
            "LOOKUP_TYPE": "If the push flag is 0 - the AIC Push service is not working properly."
        },
        {
            "LOOKUP_TYPE": "SQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = IntfTableAICCheck \"",
            "LOOKUP_CODE": "[NULL]",
            "MEANING": "[NULL]",
            "DESCRIPTION": "[NULL]",
            "ENABLED_FLAG": "[NULL]",
            "START_DATE": "[NULL]",
            "END_DATE": "[NULL]",
            "COL1": "[NULL]",
            "COL2": "[NULL]",
            "COL3": "[NULL]",
            "COL4": "[NULL]",
            "COL5": "Success",
            "COL6": "6/2/20 15:37",
            "COL7": "6/8/20 6:35",
            "COL8": "select i.ucid, i.sequence, i.status_flag, i.message, to_char(i.last_update_date,'MM/DD/YYYY HH24:MI') last_update_dt, i.message_push_flag, i.source_system from ibstg.IB_UCID_REQUEST_INTF i where ( create_date > sysdate - 10 and ( (source_system in (select source_system from ibstg.ucid_request_control where final_status = 'P') and i.message_push_flag = 0) or (i.status_flag in ('N','I','V')) ) and i.last_update_date <= sysdate - 3/(24*60) and i.ucid is not null and i.status_flag <> 'X' ) order by i.sequence desc ",
            "COL9": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "IntfTableStuckAtC",
            "MEANING": "[NULL]",
            "DESCRIPTION": "INTF Table Stuck at C",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/21/20 18:22",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100040",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the CMDM and RSA requests that were stuck at C\" with push flag 1."
        },
        {
            "LOOKUP_TYPE": "These have been updated to set push flag to 0 so that AIC will repush the status.  Action is required if the Fix Query Result shows an exception or if the same record is reported repeatedly."
        },
        {
            "LOOKUP_TYPE": "SQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = IntfTableStuckAtC\"",
            "LOOKUP_CODE": "[NULL]",
            "MEANING": "[NULL]",
            "DESCRIPTION": "[NULL]",
            "ENABLED_FLAG": "[NULL]",
            "START_DATE": "[NULL]",
            "END_DATE": "[NULL]",
            "COL1": "[NULL]",
            "COL2": "[NULL]",
            "COL3": "[NULL]",
            "COL4": "[NULL]",
            "COL5": "Success",
            "COL6": "6/4/20 9:16",
            "COL7": "6/8/20 6:35",
            "COL8": "select i.ucid, i.sequence, i.status_flag, i.message, to_char(i.last_update_date,'MM/DD/YYYY HH24:MI') last_update_dt, i.message_push_flag, i.source_system from ibstg.IB_UCID_REQUEST_INTF i where create_date > sysdate - 10 and source_system in (select source_system from ibstg.ucid_request_control where final_status = 'P') and i.last_update_date <= sysdate - 3/(24*60) and (i.message_push_flag = 1) and (i.status_flag = 'C') order by i.sequence desc ",
            "COL9": "{CALL EMC_MONITOR_PKG.Fix_IntfTableStuckAtC(?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "LinkageChangeReport",
            "MEANING": "[NULL]",
            "DESCRIPTION": "iMAP Linkage Change Report",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/22/20 14:03",
            "END_DATE": "[NULL]",
            "COL1": "10080",
            "COL2": "30",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "MDG_DRC_GLOBAL@dell.com,Thomas_Polley@Dell.com,Mahshid_Tavakoli@Dell.com,sandy.douglas@emc.com,salar.syed@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report contains linkage changes for the past one week.\r\n\r ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 2:05",
            "COL20": "6/7/20 2:05",
            "CLOB1": "select qry.linkage_change_date, qry.ucid, qry.ucid_name, qry.ucid_country, qry.ucid_segmentation , qry.old_apid, qry.new_apid , (SELECT party_name FROM emcparty.c_b_party_xref WHERE pkey_src_object ='G' || QRY.new_apid and hub_state_ind = 1) new_apid_name , (SELECT country_cd FROM emcparty.c_b_addr_xref WHERE pkey_src_object = 'G' || QRY.new_apid and hub_state_ind = 1) new_apid_country , (SELECT NVL(segmentation_override, sales_category_cd) FROM emcparty.c_b_party_xref WHERE pkey_src_object = 'G' || QRY.new_apid and hub_state_ind = 1) new_apid_segmentation , p_gu.party_name as gu_name , p_gu.rowid_object as gu_mdm_id , qry.source_of_change from (   /* CALC_AFFINITY_ID records */   SELECT      q.last_update_date linkage_change_date      , px.rowid_object      , q.ucid      , px.party_name ucid_name      , (SELECT country_cd FROM emcparty.c_b_addr_xref WHERE pkey_src_object = px.pkey_src_object AND rowid_system = px.rowid_system AND hub_state_ind = px.hub_state_ind) ucid_country      , NVL(px.segmentation_override, px.sales_category_cd) ucid_segmentation      , (SELECT identifier_value FROM emcparty.c_b_identifier_xref ix, emcparty.c_b_party_xref px         WHERE  px.ucid = q.ucid AND px.hub_state_ind = 1         AND ix.pkey_src_object = px.pkey_src_object || '|AFFINITY_ID') new_apid      , (SELECT identifier_value FROM emcparty.c_b_identifier_hxrf ih         WHERE rowid_xref = ix.rowid_xref AND hist_create_date = (            SELECT MAX (hist_create_date) FROM emcparty.c_b_identifier_hxrf            WHERE rowid_xref = ix.rowid_xref AND hist_create_date < q.last_update_date - (30 / 86400)            /* subtract 30 seconds in case the update is made to the identifier and then the queue gets updated a second after */         ) AND ROWNUM = 1) old_apid      , 'iMAP AutoCalc' source_of_change   FROM ibstg.emc_ucid_deferred_q q, emcparty.c_b_party_xref px, emcparty.c_b_identifier_xref ix   WHERE q.op_type = 'CALC_AFFINITY_ID'   AND q.last_update_date >= TRUNC (SYSDATE - 7) AND q.last_update_date < TRUNC (SYSDATE)   AND q.MESSAGE IN (    'Success : Linkage Removed',    'Success : Default APID set',    'Success : Linkage Created with default APID'   )   AND q.ucid = px.ucid AND px.hub_state_ind = 1   AND ix.pkey_src_object(+) = px.pkey_src_object || '|AFFINITY_ID' UNION   /* GAMA linkage change requests */   SELECT      q.last_update_date linkage_change_date      , px.rowid_object      , q.ucid      , px.party_name ucid_name      , (SELECT country_cd FROM emcparty.c_b_addr_xref WHERE pkey_src_object = px.pkey_src_object AND rowid_system = px.rowid_system AND hub_state_ind = px.hub_state_ind) ucid_country      , NVL(px.segmentation_override, px.sales_category_cd) ucid_segmentation      , q.udf_char1 requested_apid      , (SELECT identifier_value FROM emcparty.c_b_identifier_hxrf ih         WHERE rowid_xref = ix.rowid_xref AND hist_create_date = (            SELECT MAX (hist_create_date) FROM emcparty.c_b_identifier_hxrf            WHERE rowid_xref = ix.rowid_xref AND hist_create_date < q.last_update_date - (30 / 86400)            /* subtract 30 seconds in case the update is made to the identifier and then the queue gets updated a second after */            ) AND ROWNUM = 1         ) old_apid      , DECODE(TRIM(q.udf_char2),'N','Dell Oppty','Y','GAMA','P','GAMA Protect','Unknown') source_of_change          /* There are \"U\" records--for UNPROTECT, ignore those as they will not change the linkage */   FROM ibstg.emc_ucid_deferred_q q, emcparty.c_b_party_xref px, emcparty.c_b_identifier_xref ix   WHERE q.op_type = 'SERVICE_AFFINITY_ID' AND TRIM(q.udf_char2) in ('Y','P')   AND q.last_update_date >= TRUNC (SYSDATE - 7) AND q.last_update_date < TRUNC (SYSDATE)   AND q.ucid = px.ucid AND px.hub_state_ind = 1   AND ix.pkey_src_object(+) = px.pkey_src_object || '|AFFINITY_ID' UNION   /* Dell Oppty linkage requests - linkage only created if there is not already a linkage */   SELECT      q.last_update_date linkage_change_date      , px.rowid_object      , q.ucid      , px.party_name ucid_name      , (SELECT country_cd FROM emcparty.c_b_addr_xref WHERE pkey_src_object = px.pkey_src_object AND rowid_system = px.rowid_system AND hub_state_ind = px.hub_state_ind) ucid_country      , NVL(px.segmentation_override, px.sales_category_cd) ucid_segmentation      , q.udf_char1 requested_apid      , (SELECT identifier_value FROM emcparty.c_b_identifier_hxrf ih         WHERE rowid_xref = ix.rowid_xref AND hist_create_date = (            SELECT MAX (hist_create_date)            FROM emcparty.c_b_identifier_hxrf            WHERE rowid_xref = ix.rowid_xref AND hist_create_date < q.last_update_date - (30 / 86400)            /* subtract 30 seconds in case the update is made to the identifier and then the queue gets updated a second after */           ) AND ROWNUM = 1         ) old_apid      , DECODE(TRIM(q.udf_char2),'N','Dell Oppty','Y','GAMA','P','GAMA Protect','Unknown') source_of_change   FROM ibstg.emc_ucid_deferred_q q, emcparty.c_b_party_xref px, emcparty.c_b_identifier_xref ix   WHERE q.op_type = 'SERVICE_AFFINITY_ID' AND TRIM(q.udf_char2) = 'N'   AND q.last_update_date >= TRUNC (SYSDATE - 7) AND q.last_update_date < TRUNC (SYSDATE)   AND q.ucid = px.ucid AND px.hub_state_ind = 1   AND ix.pkey_src_object(+) = px.pkey_src_object || '|AFFINITY_ID'   AND NOT EXISTS (      /* only take the Dell Oppties where there was not already a linkage  because we wont change them */      SELECT 1 FROM emcparty.c_b_identifier_hxrf ih      WHERE rowid_xref = ix.rowid_xref      AND hist_create_date < q.last_update_date - 1/24   ) ) QRY , emcparty.c_b_party_ultimates pu , emcparty.c_b_party p_gu WHERE QRY.rowid_object = pu.rowid_party (+) and pu.hm_type_cd (+) = 'EMC' AND pu.rowid_party = p_gu.rowid_object (+) ORDER BY QRY.ucid, QRY.linkage_change_date ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "LongRunningAutoApproval",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED***  Long Auto Approve Requests",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100030",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the auto create entries that have been running for more than 30 minutes.\r\n\rPlease review and take appropriate action\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = LongRunningAutoApproval ",
            "COL8": "30",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "5/2/20 9:50",
            "COL20": "6/8/20 5:49",
            "CLOB1": "select ucid, sequence, interaction_id, to_char(create_date,'MM/DD/YYYY HH24:MI') create_dt, to_char(last_update_date,'MM/DD/YYYY HH24:MI') last_update_dt from emcparty.EMC_AUTO_APPROVE_Q where status_flag = 'R' and last_update_date <= sysdate-(?/(24*60)) ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "LongRunningNonUIProcess2",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Long Running Processes (non-UI)",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/20/20 14:54",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100001",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of all I-Map NON PORTAL Queries that have been running for more than 45 minutes.  If long runtimes persist - please ask DBA team to check for these processes. \r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = LongRunningNonUIProcess2 ",
            "COL8": "45",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/4/20 17:25",
            "COL20": "6/8/20 5:48",
            "CLOB1": "SELECT distinct(rtrim(sess.sql_id)) as sql_id, sess.sid, sess.status, sess.username, sess.schemaname, sess.machine, sql.sql_text,  to_char(sess.logon_time, 'YYYY-MON-DD hh:mi:ss am') as logon_time,  to_char(sysdate,'YYYY-MON-DD hh:mi:ss am') as curr_date,  round(sess.last_call_et / 60) min_running,  sql.cpu_time/1000000 as cpu_time  FROM v$session sess,        v$sql     sql  WHERE sql.sql_id = sess.sql_id    and sess.status = 'ACTIVE'    and sess.schemaname = 'EMCPARTY'    and sql.sql_text not like '%PKG_BO_SEARCH_MATCH%'    and sess.last_call_et >=  ? * 60  /*running for x minutes*/ order by sess.sid ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "LongRunningPortalSearch2",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Long Running Portal Search Processes",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/20/20 14:50",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100001",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of all iMAP Portal Search Queries that have been running for more than 60 minutes.  If long runtimes persist - please ask DBA team to check for these processes.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = LongRunningPortalSearch2 ",
            "COL8": "60",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 2:05",
            "COL20": "6/8/20 5:48",
            "CLOB1": "SELECT distinct(rtrim(sess.sql_id)) as sql_id, sess.sid, sess.status, sess.username, sess.schemaname, sess.machine, sql.sql_text,  to_char(sess.logon_time, 'YYYY-MON-DD hh:mi:ss am') as logon_time,  to_char(sysdate,'YYYY-MON-DD hh:mi:ss am') as curr_date,  round(sess.last_call_et / 60) min_running,  sql.cpu_time/1000000 as cpu_time  FROM v$session sess,        v$sql     sql  WHERE sql.sql_id = sess.sql_id    and sess.status = 'ACTIVE'    and sess.schemaname = 'EMCPARTY'    and sql.sql_text like '%PKG_BO_SEARCH_MATCH%'    and sess.last_call_et >= ? * 60  /*running for x minutes*/ order by sess.sid ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "MispointedDisplayNames",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Mispointed Display Name Records",
            "ENABLED_FLAG": "Y",
            "START_DATE": "3/5/20 13:32",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100010",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all active Display Name records that are pointed to pending party Xrefs.\r\r\n\r\r\nThis will prevent the party Xref from being promoted because it has child BO data.\r\r\n\r\r\nWe have attempted to repoint the records, but exceptions need to be fixed manually.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = MispointedDisplayNames ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/4/20 13:36",
            "COL20": "6/8/20 6:46",
            "CLOB1": "select dn.rowid_xref, dn.pkey_src_object, dn.rowid_party current_rowid_party , correctp.rowid_xref correct_rowid_party , correctp.pkey_src_object correct_partys_pkey_src_object , correctp.ucid correct_ucid , dn.disp_name_type, dn.disp_name_value from emcparty.c_b_display_name_xref dn, emcparty.c_b_party_xref correctp where dn.hub_state_ind = 1 and exists (select 1 from emcparty.c_b_party_xref where rowid_xref = dn.rowid_party and hub_state_ind = 0) and correctp.hub_state_ind = dn.hub_state_ind and correctp.rowid_system = '11I'  and correctp.pkey_src_object = (substr(dn.pkey_src_object, 1, length(dn.pkey_src_object)-length(dn.disp_name_type) - 1)) ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_MispointedDisplayNames(?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "MispointedLLRecords",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Mispointed Local Language Records",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:59",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100010",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all Local Language Translaction records that are pointed to the incorrect party Xref.\r\n\rWe have attempted to repoint the records, but exceptions need to be fixed manually.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = MispointedLLRecords ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 5:11",
            "COL20": "6/8/20 6:15",
            "CLOB1": "select LL.rowid_xref, LL.pkey_src_object, LL.rowid_party current_rowid_party , correctp.rowid_xref correct_rowid_party , correctp.pkey_src_object correct_partys_pkey_src_object , correctp.ucid correct_ucid from emcparty.c_b_trans_cust_data_xref ll, emcparty.c_b_party_xref correctp where ll.hub_state_ind = 1 and not exists (     select 1 from emcparty.c_b_party_xref px where     px.hub_state_ind = ll.hub_state_ind and px.rowid_system = ll.rowid_system and     px.rowid_xref = ll.rowid_party and px.pkey_src_object = NVL(SUBSTR(ll.pkey_src_object,1,  INSTR(ll.pkey_src_object, '|', -1, 2) - 1), ll.pkey_src_object) ) and correctp.hub_state_ind = ll.hub_state_ind and correctp.rowid_system = '11I' and correctp.pkey_src_object = NVL(SUBSTR(ll.pkey_src_object,1,  INSTR(ll.pkey_src_object, '|', -1, 2) - 1), ll.pkey_src_object) ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_MispointedLLRecords(?,?,?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "MissingUCIDAuditConfirm",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Missing UCID Confirmations",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100020",
            "COL3": "F",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of all UCIDS that have not received a confirmation back from AIC. If this persists, Please open a ticket - Configuration Item is  AIC - INTEGRATION.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = MissingUCIDAuditConfirm ",
            "COL8": "30",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "5/28/20 7:26",
            "COL20": "6/8/20 6:35",
            "CLOB1": "select ucid, monitor_ucidq_count, trans_type, process_flag, rowid_queue, last_update_dt, sfdc_audit_ct, crm_audit_ct, oracle_audit_ct from (     select q.ucid,     (select count(*) from obstg.ucid_queue where ucid = q.ucid and last_update_date > SYSDATE - 1 and last_updated_by like 'Monitor%') monitor_ucidq_count,     q.trans_type,     q.PROCESS_FLAG,     q.rowid_queue,     to_char(q.last_update_date,'MM/DD/YYYY HH24:MI:SS') as last_update_dt,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%SFDC%' and creation_date >= q.last_update_date) sfdc_audit_ct,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%CRM%' and creation_date >= q.last_update_date) crm_audit_ct,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%11I%' and creation_date >= q.last_update_date) oracle_audit_ct     from obstg.UCID_QUEUE q     where q.INTERFACE_NAME = 'CUSTOMER'     and q.process_flag = 'P'     and q.last_update_date > sysdate - 1     /* allow a delay (about 15-20 min, configured in COL8) for downstream systems to return an audit */     and q.last_update_date <= sysdate - (?/1440)      /* only check for records since SAM go-live */     and to_char(q.last_update_date,'MM/DD/YYYY HH24:MI:SS') > '02/12/2018 11:00:00'     /* only check latest CUSTOMER record for a UCID */     and not exists (select 1 from obstg.ucid_queue where ucid = q.ucid and interface_name = 'CUSTOMER' and process_flag = 'P' and last_update_date > q.last_update_date) ) qry where (sfdc_audit_ct = 0 or crm_audit_ct = 0 or oracle_audit_ct = 0) and monitor_ucidq_count <= 5 and rownum < 101 order by qry.ucid,qry.last_update_dt desc ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_MissingUCIDAuditConfirm(?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "MissingUCIDAuditConfirm5Requeues",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Missing UCID Confirmations Requeued 5 times",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100020",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of all UCIDS that have not received a confirmation back from AIC that have been requeued more than 5 times.\r\n\rIf this persists, Please open a ticket - Configuration Item is  AIC - INTEGRATION.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = MissingUCIDAuditConfirm5Requeues ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "4/17/20 17:30",
            "COL20": "6/8/20 6:35",
            "CLOB1": "select ucid, trans_type, process_flag, rowid_queue, last_update_dt, sfdc_audit_ct, crm_audit_ct, oracle_audit_ct, monitor_ucidq_count from (     select q.ucid,     (select count(*) from obstg.ucid_queue where ucid = q.ucid and last_update_date > SYSDATE - 1 and last_updated_by like 'Monitor%') monitor_ucidq_count,     q.trans_type,     q.PROCESS_FLAG,     q.rowid_queue,     to_char(q.last_update_date,'MM/DD/YYYY HH24:MI:SS') as last_update_dt,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%SFDC%' and creation_date > q.last_update_date) sfdc_audit_ct,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%CRM%' and creation_date > q.last_update_date) crm_audit_ct,     (select count(*) from obstg.ucid_audit where ucid = q.ucid and source like '%11I%' and creation_date > q.last_update_date) oracle_audit_ct     from obstg.UCID_QUEUE q     where q.INTERFACE_NAME = 'CUSTOMER'     and q.process_flag = 'P'     and q.last_update_date > sysdate - 1     /* only check for records since SAM go-live */     and to_char(q.last_update_date,'MM/DD/YYYY HH24:MI:SS') > '02/12/2018 11:00:00'     /* only check latest CUSTOMER record for a UCID */     and not exists (select 1 from obstg.ucid_queue where ucid = q.ucid and interface_name = 'CUSTOMER' and process_flag = 'P' and last_update_date > q.last_update_date) ) qry where (sfdc_audit_ct = 0 or crm_audit_ct = 0 or oracle_audit_ct = 0) and monitor_ucidq_count > 5 and rownum < 1001 order by qry.ucid,qry.last_update_dt desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "NonFedUCIDsInFedGU",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Non-Federal UCIDs rolling up to the Federal GU",
            "ENABLED_FLAG": "Y",
            "START_DATE": "3/31/20 16:29",
            "END_DATE": "[NULL]",
            "COL1": "10075",
            "COL2": "103000",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "Bob.Ternullo@dell.com,sandy.douglas@dell.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of non-Federal UCIDs that are rolling up to the Federal GU (Global Duns 161906193). \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 8:56",
            "COL20": "6/7/20 8:56",
            "CLOB1": "SELECT ucid, mdm_id, party_name , TRIM(addr_1||' '||addr_2||' '||addr_3||' '||addr_4) AS address, city, state, country_cd , party_status, NVL(federal_class_flag, 'N') AS federal_flag , rtm, defaut_segmentation AS default_segmentation, segmentation_override, sales_category_cd AS published_segmentation , (SELECT identifier_value FROM obpub.ob_cust_identifier WHERE ucid = c.ucid AND identifier_code = 'AFFINITY_ID') AS linked_apid FROM obpub.ob_customer c WHERE mdm_id IN (     SELECT mdm_id FROM obpub.ob_cust_hier WHERE global_duns_nbr = '161906193' ) AND NVL(sales_category_cd, 'NOT DEFINED') NOT LIKE 'FEDERAL%' AND TRIM(NVL(party_status, 'A')) = 'A' /* Note that GU DUNS 161906193 has 95 pct of federal UCIDs */ ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "NullInteractionId",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Pending Xrefs Missing Interaction ID",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/26/20 14:00",
            "END_DATE": "[NULL]",
            "COL1": "120",
            "COL2": "102000",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves pending party or address Xrefs that are missing the interaction ID.\r\r\n\r\r\nThe Fix SP will set the interaction ID back to the value we retrieve from history.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = NullInteractionId ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/4/20 15:36",
            "COL20": "6/8/20 5:12",
            "CLOB1": "select 'C_B_PARTY_XREF' as table_name, x.rowid_xref , (select interaction_id from emcparty.c_b_party_hxrf where rowid_xref = x.rowid_xref and interaction_id is not null order by hist_create_date fetch first 1 row only) as hist_interaction_id , x.pkey_src_object from emcparty.c_b_party_xref x where hub_state_ind = 0 and interaction_id is null UNION select 'C_B_ADDR_XREF' as table_name, a.rowid_xref , (select interaction_id from emcparty.c_b_addr_hxrf where rowid_xref = a.rowid_xref and interaction_id is not null order by hist_create_date fetch first 1 row only) as hist_interaction_id , a.pkey_src_object from emcparty.c_b_addr_xref a where hub_state_ind = 0 and interaction_id is null UNION select 'C_B_PARTY_ADDR_XREF' as table_name, a.rowid_xref , (select interaction_id from emcparty.c_b_party_addr_hxrf where rowid_xref = a.rowid_xref and interaction_id is not null order by hist_create_date fetch first 1 row only) as hist_interaction_id , a.pkey_src_object from emcparty.c_b_party_addr_xref a where hub_state_ind = 0 and interaction_id is null ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_NullInteractionId(?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "OSCCreateRequests",
            "MEANING": "[NULL]",
            "DESCRIPTION": "OSC Customer Requests in last 24 hours",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/31/20 19:40",
            "END_DATE": "[NULL]",
            "COL1": "1435",
            "COL2": "101000",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,ken.swidrak@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is an audit of OSC UCID Requests in the last 24 hours. \r\n\rPlease do not reply to this Message.  If you have any issues - please open a ServiceNow ticket. \r\n\rThank you. ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/5/20 19:54",
            "COL20": "6/7/20 19:43",
            "CLOB1": "select x.ucid, x.party_name as customer_name, a.addr_1 as address1, a.addr_2 as address2, a.addr_3 as address3, a.addr_4 as address4, a.city, a.province, a.postal_cd as postal_code, a.country_cd as country, to_char(x.create_date,'YYYY-MM-DD HH24:MI:SS') as create_date, decode( substr(nvl(ib.requestor_system,x.emc_source_system), 1, 6), 'SFDC', 'SFDC Core Lead', 'DELL', 'Dell Main Oppty', 'WEBAPP', 'I-Map Portal', nvl(ib.requestor_system,x.emc_source_system) ) as requestor_system, x.requestor_email, local_name, local_address1, local_address2, local_address3, local_address4, local_city, local_region, decode(x.hub_state_ind, 1, 'Approved', 0, 'Pending Approval', x.hub_state_ind) approved_or_pending_review from emcparty.c_b_party_xref x, emcparty.c_b_addr_xref a,  ibstg.IB_UCID_REQUEST_INTF ib where a.pkey_src_object = x.PKEY_SRC_OBJECT and ib.ucid = x.ucid and x.create_date > sysdate - (1 + (15/1440)) /* since it only runs once per day, add an extra 15 min */ and x.party_status like 'A%' and ib.requestor_system = 'OSC' and x.ucid < '18' order by x.ucid desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "OrphanedPendingChildXrefs",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Orphaned Pending Child Xrefs",
            "ENABLED_FLAG": "Y",
            "START_DATE": "5/12/20 13:40",
            "END_DATE": "[NULL]",
            "COL1": "240",
            "COL2": "100003",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves pending addr or party-addr Xrefs where there is no pending party Xref with the same interaction ID.\r\n\rThese need to be cleaned up as they will block updating of the UCID.\r\n\rResearch is needed to determine whether to promote or delete.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = OrphanedPendingChildXrefs ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 3:40",
            "COL20": "6/8/20 3:40",
            "CLOB1": "select 'C_B_ADDR_XREF' as table_name, to_char(create_date, 'DD-MON-YYYY hh24:mi:ss') as create_dt, rowid_xref, pkey_src_object, interaction_id , (select 1 from emcparty.c_b_party_xref where hub_state_ind = 1 and pkey_src_object = ax.pkey_src_object and rowid_system = ax.rowid_system) active_party_exists , (select 1 from emcparty.c_b_party_xref where hub_state_ind = 0 and pkey_src_object = ax.pkey_src_object and rowid_system = ax.rowid_system) any_pending_party_exists , (select 1 from emcparty.c_b_addr_xref where hub_state_ind = 1 and pkey_src_object = ax.pkey_src_object and rowid_system = ax.rowid_system) active_child_xrf_exists from emcparty.c_b_addr_xref ax where hub_state_ind = 0 and pkey_src_object not like 'G%' and create_date < sysdate - 1/1440 and not exists (    select 1 from emcparty.c_b_party_xref where hub_state_ind = 0 and pkey_src_object = ax.pkey_src_object and rowid_system = ax.rowid_system and interaction_id = ax.interaction_id ) UNION select 'C_B_PARTY_ADDR_XREF' as table_name, to_char(create_date, 'DD-MON-YYYY hh24:mi:ss') as create_dt, rowid_xref, pkey_src_object, interaction_id , (select 1 from emcparty.c_b_party_xref where hub_state_ind = 1 and pkey_src_object = pax.pkey_src_object and rowid_system = pax.rowid_system) active_party_exists , (select 1 from emcparty.c_b_party_xref where hub_state_ind = 0 and pkey_src_object = pax.pkey_src_object and rowid_system = pax.rowid_system) any_pending_party_exists , (select 1 from emcparty.c_b_party_addr_xref where hub_state_ind = 1 and pkey_src_object = pax.pkey_src_object and rowid_system = pax.rowid_system) active_child_xrf_exists from emcparty.c_b_party_addr_xref pax where hub_state_ind = 0 and pkey_src_object not like 'G%' and create_date < sysdate - 1/1440 and not exists (    select 1 from emcparty.c_b_party_xref where hub_state_ind = 0 and pkey_src_object = pax.pkey_src_object and rowid_system = pax.rowid_system and interaction_id = pax.interaction_id ) ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "PartiesMissingUCIDIdentifier",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Parties Missing UCID Identifiers",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100000",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This is a report of Parties Missing UCID Identifiers over the last 7 days. \r\r\n\r\r\neRoom Job Aid Title 48  https://eroom.int.dellemc.com/sites/MasterAccountProfileMAP/_layouts/15/start.aspx#/Lists/Production%20Support%20Database/Production%20Support%20Database%20View.aspx#InplviewHashbf056dbf-9b5a-4124-91eb-feb4bca05821= \r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = PartiesMissingUCIDIdentifier ",
            "COL8": "7",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/2/20 13:44",
            "COL20": "6/8/20 5:48",
            "CLOB1": "select (select tak_action from emcparty.c_status_capture sc, emcparty.c_repos_task_assignment_hist th   where th.interaction_id = x.interaction_id and th.rowid_task = sc.rowid_task) task_action /*--, (select 1 from emcparty.c_b_party_xref where pkey_src_object like 'A%' and pkey_src_object <> x.pkey_src_object and emc_source_system = x.emc_source_system*/ /*--    and emc_source_object = x.emc_source_object and emc_source_field = x.emc_source_field and emc_source_val = x.emc_source_val) resub_flag*/ , (select 1 from emcparty.c_b_addr_xref where pkey_src_object = x.pkey_src_object and hub_state_ind = x.hub_state_ind) has_addr , (select 1 from emcparty.c_b_party_addr_xref where pkey_src_object = x.pkey_src_object and hub_state_ind = x.hub_state_ind) has_ptyaddr , (select rowid_task from emcparty.c_repos_task_assignment where interaction_id = x.interaction_id) open_task_id , hub_state_ind, ucid, attribute34 repl_ucid, request_id, to_char(request_date,'MM/DD/YYYY HH24:MI') request_dt, to_char(create_date,'MM/DD/YYYY HH24:MI') create_dt, to_char(last_update_date,'MM/DD/YYYY HH24:MI') last_update_dt, requestor_ntid, requestor_email, emc_source_system, emc_source_object, emc_source_field, emc_source_val , party_name, comments, interaction_id, rowid_object, pkey_src_object, rowid_xref from emcparty.c_b_party_xref x where ucid is not null  and ucid not like '18%' and last_update_date >= sysdate-? and create_date < sysdate - (30/(24*60*60)) /*wait 30 seconds after creation so we don't get false positives that are in process of being upserted*/ and attribute34 is null  /*--Was already processed as replacement UCID (maybe party Xref did not get deleted)*/ and not exists (  /*--The request was rejected, so we dont care if it has the UCID identifier*/    select 1 from emcparty.c_status_capture sc, emcparty.c_repos_task_assignment_hist th   where th.interaction_id = x.interaction_id and th.rowid_task = sc.rowid_task and tak_action = 'REJECT' ) and not exists (    select 1 from emcparty.c_b_identifier_xref where pkey_src_object = x.pkey_src_object || '|UCID' ) /*--and exists (select 1 from emcparty.c_repos_task_assignment_hist where interaction_id = x.interaction_id)*/ order by x.create_date ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "PartyRelMissingParent",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Party Relationships with NULL Parent",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/26/20 14:16",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100000",
            "COL3": "R",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves party relationship records that have NULL parent.\r\n\rThese relatioships must be deleted.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = PartyRelMissingParent ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "[NULL]",
            "COL20": "6/8/20 5:48",
            "CLOB1": "select to_char(create_date, 'DD-MON-YYYY hh24:mi:ss') as create_dt, to_char(last_update_date, 'DD-MON-YYYY hh24:mi:ss') as last_update_dt, rowid_object, hm_type_cd, rowid_child, rowid_parent from emcparty.c_b_party_rel where rowid_parent is null ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "RelsMissingExclFromMatch",
            "MEANING": "[NULL]",
            "DESCRIPTION": "End-Dated Party Rels Missing Exclude From Match Flag",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/21/20 18:35",
            "END_DATE": "[NULL]",
            "COL1": "717",
            "COL2": "102000",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves end-dated EMC party relationships that do not have the exclude from match flag set.\r\r\n\r\r\nThe Fix SP will set exclude from match to 1 so that these will not cause issues by merging when a new relationship is created.\r\r\n\r\r\nWe are selecting relationships with deleted_ind = -999999999, so there could be some end-dated relationships that are missed.\r\r\n\r\r\nSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = RelsMissingExclFromMatch ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/8/20 2:37",
            "COL20": "6/8/20 2:37",
            "CLOB1": "select rowid_object, rowid_child, rowid_parent , to_char(rel_start_date, 'DD-MON-YYYY hh24:mi:ss') as rel_start_dt , to_char(rel_end_date, 'DD-MON-YYYY hh24:mi:ss') as rel_end_dt from emcparty.c_b_party_rel_v r where deleted_ind < 0  and hub_state_ind > 0 and exclude_from_match = 0 and hm_type_cd = 'EMC' and rel_end_date < sysdate ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_RelsMissingExclFromMatch(?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "ResetFixedRunTimeMonitors",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Run Time Adjustment for Fixed Time Monitors",
            "ENABLED_FLAG": "Y",
            "START_DATE": "4/16/20 11:22",
            "END_DATE": "[NULL]",
            "COL1": "10075",
            "COL2": "100",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "sandy.douglas@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This fix monitor will reset the times for daily or weekly monitors that are supposed to run at a specific time.\r\n\rThe driving query is meaningless--we always want to run.\r\n\rSQL for the fix procedure is in CLOB2 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = ResetFixedRunTimeMonitors ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/6/20 9:50",
            "COL20": "6/6/20 9:50",
            "CLOB1": "select 'Execute Fix' from dual",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_AdjustFixedTimeMonitors(?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "TaskCreateJobNotRunning",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Task Create Job is not running",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "15",
            "COL2": "100000",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "The task create job has not run within the last 30 minutes.  Please investigate!\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = TaskCreateJobNotRunning ",
            "COL8": "30",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "5/3/20 15:19",
            "COL20": "6/8/20 6:30",
            "CLOB1": "select to_char(last_processed_createdt, 'DD-MON-YYYY hh24:mi:ss') as last_run_dt , to_char(sysdate, 'DD-MON-YYYY hh24:mi:ss') as sysdt  from emcparty.c_workflow_mgmt  where serial = 1 and last_processed_createdt < sysdate - ?/60/24 ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "UCIDRequestIntfAICMatchCheck",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Auto Create (INTF Table) AIC Match Problems",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100050",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has 2 AIC Error conditions: \r\n\r1. If the status is C\" - AIC did not create a ucid and needs to be matched manually.  "
        },
        {
            "LOOKUP_TYPE": "2. If the status is \"U\" - this ucid is stuck at \"U\" - but has no task.  "
        },
        {
            "LOOKUP_TYPE": "SQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = UCIDRequestIntfAICMatchCheck \"",
            "LOOKUP_CODE": "7",
            "MEANING": "[NULL]",
            "DESCRIPTION": "[NULL]",
            "ENABLED_FLAG": "[NULL]",
            "START_DATE": "[NULL]",
            "END_DATE": "[NULL]",
            "COL1": "[NULL]",
            "COL2": "[NULL]",
            "COL3": "[NULL]",
            "COL4": "[NULL]",
            "COL5": "Success",
            "COL6": "6/4/20 13:41",
            "COL7": "6/8/20 5:49",
            "COL8": "select  sequence, request_id, ucid, rowid_xref, to_char(create_date,'YYYY-MM-DD HH24:MI:SS') as create_dt, status_flag, source_system, customer_name, address1, address2, address3, address4, city, region, postal_code, country_cd, user_comments from ibstg.IB_UCID_REQUEST_INTF i where create_date > sysdate - ?  /*and source_system <> 'DELL' and source_system <> 'SFDC' */ and source_system not like 'WEBAPP%'  and status_flag in ('C','P') and 0 = (select count(*) from emcparty.c_b_party_xref x where x.ucid = i.ucid)  UNION select sequence, request_id, ucid, rowid_xref, to_char(create_date,'YYYY-MM-DD HH24:MI:SS') as create_dt, status_flag, source_system, customer_name, address1, address2, address3, address4, city, region, postal_code, country_cd, user_comments from ibstg.IB_UCID_REQUEST_INTF i where create_date > sysdate - ? /*and source_system <> 'DELL' and source_system <> 'SFDC' */ and source_system not like 'WEBAPP%' and status_flag = 'U' and 0 = (select count(*) from emcparty.c_b_party_xref x where x.ucid = i.ucid) and 0 = (select count(*) from emcparty.emc_auto_approve_q where ucid = i.ucid) /* is not in the auto-approval queue, we were getting false positives for replacement UCIDs */ ",
            "COL9": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "UCIDRequestIntfErrors",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Auto Create (INTF Table) Exceptions",
            "ENABLED_FLAG": "Y",
            "START_DATE": "2/18/20 11:07",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100035",
            "COL3": "R",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the Auto Create requests that have thrown an Error.  \r\n\rThese either will not be resubmitted automatically and require manual intervention OR have failed resubmit more than 5 times. \r\n\rPlease review and take appropriate action. \r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = UCIDRequestIntfErrors ",
            "COL8": "10",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/7/20 20:11",
            "COL20": "6/8/20 5:49",
            "CLOB1": "select i.ucid, i.sequence, i.status_flag, i.message, to_char(i.last_update_date,'MM/DD/YYYY HH24:MI') as last_update_dt, i.retry_count from ibstg.IB_UCID_REQUEST_INTF i where create_date > sysdate - ? and status_flag = 'E' AND (i.retry_count > 5 OR NOT EXISTS (select 1 from emcparty.c_emc_lookup_ctrl where lookup_type = 'INTF_RETRY_ERROR_MSG' and i.message like col1||'%') ) order by i.sequence desc ",
            "CLOB2": "[NULL]"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "UCIDRequestIntfErrorsResubmit",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Auto Create (INTF Table) Exceptions Resubmitted",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100040",
            "COL3": "F",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the Auto Create requests that have thrown an Error.  \r\r\n\r\r\nFor some errors, the fix procedure will set the status back to V\" to attempt a retry.  "
        },
        {
            "LOOKUP_TYPE": "For the records where the message is not in the resubmit list (C_EMC_LOOKUP_CTRL where lookup_type = INTF_RETRY_ERROR_MSG), Please review and take appropriate action and set status back to \"V\" if appropriate."
        },
        {
            "LOOKUP_TYPE": "SQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = UCIDRequestIntfErrorsResubmit \"",
            "LOOKUP_CODE": "10",
            "MEANING": "[NULL]",
            "DESCRIPTION": "[NULL]",
            "ENABLED_FLAG": "[NULL]",
            "START_DATE": "[NULL]",
            "END_DATE": "[NULL]",
            "COL1": "[NULL]",
            "COL2": "[NULL]",
            "COL3": "[NULL]",
            "COL4": "[NULL]",
            "COL5": "Success",
            "COL6": "6/8/20 5:49",
            "COL7": "6/8/20 5:49",
            "COL8": "select i.ucid, i.sequence, i.status_flag, i.message, to_char(i.last_update_date,'MM/DD/YYYY HH24:MI') as last_update_dt, i.retry_count from ibstg.IB_UCID_REQUEST_INTF i where create_date > sysdate - ? and status_flag = 'E' order by i.sequence desc ",
            "COL9": "{CALL EMC_MONITOR_PKG.Fix_UCIDRequestIntfErrors(?,?,?,?,?,?)}"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "UCIDRequestIntfStuckAtU",
            "MEANING": "[NULL]",
            "DESCRIPTION": "Auto Create (INTF Table) Approval Errors",
            "ENABLED_FLAG": "Y",
            "START_DATE": "1/13/20 13:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100040",
            "COL3": "F",
            "COL4": "PER",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This report has all the Auto Create requests that have been approved - but the interface table still shows U\".  "
        },
        {
            "LOOKUP_TYPE": "We will call the Common SP for INTF status updates to set the status to \"C\". Action is required if the Fix Query Result shows an exception or if the same record is reported repeatedly. "
        },
        {
            "LOOKUP_TYPE": "SQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = UCIDRequestIntfStuckAtU \"",
            "LOOKUP_CODE": "10",
            "MEANING": "[NULL]",
            "DESCRIPTION": "[NULL]",
            "ENABLED_FLAG": "[NULL]",
            "START_DATE": "[NULL]",
            "END_DATE": "[NULL]",
            "COL1": "[NULL]",
            "COL2": "[NULL]",
            "COL3": "[NULL]",
            "COL4": "[NULL]",
            "COL5": "Success",
            "COL6": "6/3/20 11:50",
            "COL7": "6/8/20 5:49",
            "COL8": "select i.ucid, i.request_id, i.rowid_xref, i.sequence, i.status_flag, i.message, to_char(i.last_update_date,'MM/DD/YYYY HH24:MI:SS') as intf_last_update_dt, to_char(x.last_update_date,'MM/DD/YYYY HH24:MI:SS') as party_last_update_dt from ibstg.IB_UCID_REQUEST_INTF i, EMCPARTY.C_B_PARTY_XREF x where i.ucid = x.ucid and x.hub_state_ind = 1 and x.last_update_date <= SYSDATE - 5/(24*60) and i.create_date > sysdate - ? and i.status_flag = 'U' /*--and i.source_system = 'CMDM'*/ order by i.sequence desc ",
            "COL9": "{CALL EMC_MONITOR_PKG.Fix_UCIDRequestIntfStuckAtU(?,?,?,?,?)"
        },
        {
            "LOOKUP_TYPE": "MONITOR_QUERY",
            "LOOKUP_CODE": "UCIDsMissingPartyNumber",
            "MEANING": "[NULL]",
            "DESCRIPTION": "***ACTION REQUIRED*** Transactional UCIDs Missing Party Number",
            "ENABLED_FLAG": "Y",
            "START_DATE": "4/16/20 16:08",
            "END_DATE": "[NULL]",
            "COL1": "60",
            "COL2": "100002",
            "COL3": "F",
            "COL4": "NONE",
            "COL5": "iMAPMonitor@dell.com",
            "COL6": "ITSDGCustomerHubSupport@emc.com,it.imap.prod.alerts@dell.com",
            "COL7": "This monitor retrieves transactional UCIDs which are missing the party number on the party Xref.\r\n\rIt will attempt to populate the party number using the Party Number Identifier.\r\n\rAction must be taken for those records which are not successfully handled.\r\n\rSQL is in CLOB1 of C_EMC_LOOKUP_CTRL where lookup_type = MONITOR_QUERY and lookup_code = UCIDsMissingPartyNumber ",
            "COL8": "[NULL]",
            "COL9": "[NULL]",
            "COL10": "[NULL]",
            "COL11": "[NULL]",
            "COL12": "[NULL]",
            "COL13": "[NULL]",
            "COL14": "[NULL]",
            "COL15": "[NULL]",
            "COL16": "[NULL]",
            "COL17": "[NULL]",
            "COL18": "Success",
            "COL19": "6/4/20 16:20",
            "COL20": "6/8/20 5:49",
            "CLOB1": "select ucid, rowid_xref , (select identifier_value from emcparty.c_b_identifier_xref where pkey_src_object = px.pkey_src_object || '|11I_PARTY_NBR') identifier_party_nbr , (select identifier_value from emcparty.c_b_identifier_xref where pkey_src_object = px.pkey_src_object || '|11I_PARTY_ID') identifier_party_id , (select listagg('PARTY_ID: '|| party_id || '; PARTY_NUMBER: ' || party_number, ' | ') within group (order by party_id) from obstg.remote_hz_parties where attribute11 = px.ucid) \"11i_data\" , (select count(*) from obstg.ucid_queue where interface_name = 'CUSTOMER' and ucid = px.ucid) ucid_q_ct , (select count(distinct source) from obstg.ucid_audit where ucid = px.ucid and status not like 'E%') ucid_audit_src_ct  from emcparty.c_b_party_xref px where hub_state_ind = 1 and ucid is not null and ucid not like '18%' and party_nbr is null and nvl(px.party_status, 'A') like 'A%' and px.last_update_date < sysdate - (1/48) /* give it 30 minutes in case things are backed up */  ",
            "CLOB2": "{CALL EMC_MONITOR_PKG.Fix_UCIDsMissingPartyNumber(?,?,?,?,?,?,?,?,?)}"
        }
    ]
}